#define _CRT_SECURE_NO_WARNINGS 1
#include"Declaration.h"
void GamePlay(int choice)								//游戏游玩
{
	;
}
//游戏游玩函数
//负责人：
//功能：
//1. 当接收到特定参数信息时，能够跳转到相关模式游戏界面并运行游戏，开始游玩
//2. 当在模式选择界面没有选取到相关信息时，保持等待输入状态
//参数：整型choice接收从模式选择界面读取通过鼠标点击按钮返回的特定值
//普通模式choice == 1，无尽模式choice == 2，自由练习choice = 3
//返回值：无

void GameOver(int judgement)							//游戏结束，参数为空，返回值返回（重试1或退出0）
{
	;
}
//游戏结束函数
//负责人：
//功能：
//1. 设计一个当蛇头与墙或自身碰撞时跳转到游戏结束页面的功能函数（需要与开发蛇移动逻辑和游戏界面设计的相关负责人协商）
//2. 可选择弹窗提示游戏失败或单独的界面跳转实现该功能（游戏结束界面需要自行设计，并添加重试或退出两个按钮）
//参数：整型judgement参数判断蛇头是否与边界或自身相碰撞
//返回值：无

void GamePass(int PassNum)								//游戏通关，参数为（普通通关到下一界面，或通关获胜，调用Victory）
{

}
//游戏通关
//负责人：
//功能：
//1. 设计一个游戏通关函数模块，当取得的参数不为1时不执行该功能
//2. 可选择弹窗提示游戏失败或单独的界面跳转实现该功能（游戏结束界面需要自行设计，并添加重试或退出两个按钮）
//参数：整型PassNum参数判断当前关卡是否已通过，通过则PassNum == 1，否则不执行
//返回值：无

void Victory()  										//游戏胜利
{
	;
}
//游戏胜利
//负责人：
//功能：
//1.当进入该函数时，跳转到胜利界面，展示胜利图片或庆祝信息，并展示所得分数
//2.一个按钮嵌入，点击以返回到主界面
//参数：无
//返回值：无

void SnakeInit()										//蛇出生点和状态的初始化
{
	;
}
//蛇出生点和状态的初始化
//负责人：
//功能：
//1.定义初始状态蛇的长度和样式信息（如蛇的初始节数
//蛇的最大节数限制，出生点坐标，移动速度，默认蛇头方向等等）
//参数：无
//返回值：无

void FoodInit()											//食物的随机生成和出现位置函数
{
	;
}
//食物的随机生成和出现位置函数
//负责人：
//功能：
//1.让食物随机在限定的界面框之内随机位置生成，注意不要让食物生成到图形界面外防止蛇找不到食物的情况
// 初始化食物信息（如大小，颜色，以及食物吃或未被吃的状态变量（如布尔类型））
//
//参数：无
//返回值：无

void GameDraw()											//贪吃蛇和食物图形的缓冲绘制
{
	;
}
//贪吃蛇和食物图形的缓冲绘制
//负责人：
//功能：
//1.绘制不停刷新的动态的蛇位置和食物随机生成位置
//2.绘制食物形状，蛇的形状大小，颜色以及蛇初始的生成点图像
//参数：无
//返回值：无

void SnakeMove()										//蛇的移动功能
{
	;
}
//蛇的移动功能
//负责人：
//功能：
//1.让蛇移动，并实现蛇的身体跟着蛇头走
//2.通过按键输入改变蛇的方向，并能使蛇匀速直线运动，即移动速度不会因为键入而改变
//参数：无
//返回值：无

void BorderLine(int SnakeState)							//蛇与地狱边界碰撞检测函数
{
	;
}
//蛇与地图边界碰撞检测函数
//负责人：
//功能：
//1.判断蛇头是否与边界重合，该功能仅在闯关模式中生效
//参数：当与墙壁碰撞时，调用该函数，传参并在其中调用GameOver函数，结束游戏
//返回值：无

void EatSelf(int SnakeState)							//蛇与自身坐标碰撞检测函数
{
	;
}
//蛇与自身坐标碰撞检测函数
//负责人：
//功能：
//1.判断蛇头与蛇自己的身体坐标是否重合，在除了自由练习的所有模式中生效
//参数：当与自身身体坐标重合时，调用该函数，传参并在其中调用GameOver函数，结束游戏
//返回值：无

void EatFoot()											//食物被吃判断函数
{
	;
}
//食物被吃判断函数
//负责人：
//功能：
//1.判断当蛇头坐标与食物坐标重合或贴边时，使食物消失，并在另外的随机位置生成相同食物
//2.食物刷新颜色可自定义（额外功能）
//3. 需要调用到FoodInit函数来刷新食物的随机位置生成
//参数：无
//返回值：无


int KeyBoardControl()									//通过键盘和Windows静态库函数实现WASD控制蛇移动
{

}
//控制蛇移动
//负责人：
//功能：
//1.键入方向键，或WASD,wasd等控制蛇头移动
//2.通过windows接口函数API实现，或通过_getch()阻塞函数的分支结构switch-case实现
//参数：无
//返回值：无
